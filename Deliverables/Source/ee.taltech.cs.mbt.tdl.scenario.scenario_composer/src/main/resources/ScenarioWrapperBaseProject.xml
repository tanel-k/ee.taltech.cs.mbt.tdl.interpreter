<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>const int TDL_MAX_INT = 32767;
const int TDL_TIMEOUT = 10000;
const int TRAPSET_COUNT = 1; // Tool needs to specify value.
const int TDL_TREE_NODE_COUNT = 1; // Tool needs to specify value.

typedef int[1, 5] BoundType;
typedef int[0, TDL_MAX_INT] BoundValue;
typedef int[0, TRAPSET_COUNT - 1] TrapsetIndex;
typedef int[0, TDL_TREE_NODE_COUNT - 1] TdlTreeIndex;

const BoundType BOUND_EQ = 1;
const BoundType BOUND_GT = 2;
const BoundType BOUND_GTE = 3;
const BoundType BOUND_LT = 4;
const BoundType BOUND_LTE = 5;

broadcast chan TdlActivatorChannels[TdlTreeIndex];
broadcast chan TdlTerminatorChannels[TdlTreeIndex];
broadcast chan TrapsetActivatorChannels[TrapsetIndex];
broadcast chan TrapsetTerminatorChannels[TrapsetIndex];

bool TdlDiagnostics[TdlTreeIndex];

// Tool needs to add Trapset array declarations here.
</declaration><template><name>TdlStopwatch</name><parameter>const TdlTreeIndex &amp;rootIndex</parameter><declaration>clock timeoutClock;</declaration><location id="id0" x="-152" y="56"><name x="-136" y="48">Fail</name></location><location id="id1" x="-152" y="-160"><name x="-136" y="-168">Pass</name></location><location id="id2" x="-280" y="-56"><name x="-312" y="-96">Listening</name><label kind="invariant" x="-264" y="-64">timeoutClock &lt;= TDL_TIMEOUT</label></location><location id="id3" x="-528" y="-56"><committed/></location><init ref="id3"/><transition><source ref="id2"/><target ref="id0"/><label kind="guard" x="-200" y="-8">timeoutClock == TDL_TIMEOUT</label></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="-192" y="-120">TdlTerminatorChannels[rootIndex]?</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-504" y="-80">TdlActivatorChannels[rootIndex]!</label><label kind="assignment" x="-464" y="-56">timeoutClock = 0</label></transition></template><template><name>TdlBoundedLeadsToRecognizer</name><parameter>const BoundType boundType, const BoundValue boundValue, const TdlTreeIndex treeIndex, const TdlTreeIndex leftOpIndex, const TdlTreeIndex rightOpIndex</parameter><declaration>const bool lessThanBound = (boundType == BOUND_LT);
const bool lessThanOrEqBound = (boundType == BOUND_LTE);
const bool greaterThanBound = (boundType == BOUND_GT);
const bool greaterThanOrEqBound = (boundType == BOUND_GTE);
const bool equalityBound = (boundType == BOUND_EQ);

clock localClock;</declaration><location id="id4" x="152" y="-96"><name x="136" y="-128">End</name><committed/></location><location id="id5" x="-96" y="-96"><committed/></location><location id="id6" x="-232" y="-96"><committed/></location><location id="id7" x="-504" y="-96"><name x="-552" y="-136">ListeningRightOp</name></location><location id="id8" x="-768" y="-96"><committed/></location><location id="id9" x="-1040" y="-96"><name x="-1088" y="-136">ListeningLeftOp</name></location><location id="id10" x="-1304" y="-96"><committed/></location><location id="id11" x="-1544" y="-96"><name x="-1554" y="-126">Idle</name></location><init ref="id11"/><transition><source ref="id6"/><target ref="id10"/><label kind="guard" x="-912" y="-232">equalityBound &amp;&amp; localClock &gt; boundValue</label><nail x="-232" y="-208"/><nail x="-1304" y="-208"/></transition><transition><source ref="id6"/><target ref="id7"/><label kind="guard" x="-504" y="0">equalityBound &amp;&amp; localClock &lt; boundValue</label><nail x="-232" y="24"/><nail x="-504" y="24"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-224" y="-232">equalityBound &amp;&amp; localClock == boundValue</label><nail x="-232" y="-208"/><nail x="-96" y="-208"/></transition><transition><source ref="id6"/><target ref="id7"/><label kind="guard" x="-568" y="-32">greaterThanOrEqBound &amp;&amp; localClock &lt; boundValue</label><nail x="-232" y="-8"/><nail x="-504" y="-8"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-224" y="-32">greaterThanOrEqBound &amp;&amp; localClock &gt;= boundValue</label><nail x="-232" y="-8"/><nail x="-96" y="-8"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-224" y="-168">lessThanBound &amp;&amp; localClock &lt; boundValue</label><nail x="-232" y="-144"/><nail x="-96" y="-144"/></transition><transition><source ref="id6"/><target ref="id10"/><label kind="guard" x="-912" y="-168">lessThanBound &amp;&amp; localClock &gt;= boundValue</label><nail x="-232" y="-144"/><nail x="-1304" y="-144"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="-80" y="-120">TdlTerminatorChannels[treeIndex]!</label><label kind="assignment" x="-80" y="-96">TdlDiagnostics[treeIndex] = true</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-224" y="-200">lessThanOrEqBound &amp;&amp; localClock &lt;= boundValue</label><nail x="-232" y="-176"/><nail x="-96" y="-176"/></transition><transition><source ref="id6"/><target ref="id10"/><label kind="guard" x="-912" y="-200">lessThanOrEqBound &amp;&amp; localClock &gt; boundValue</label><nail x="-232" y="-176"/><nail x="-1304" y="-176"/></transition><transition><source ref="id4"/><target ref="id11"/><nail x="152" y="40"/><nail x="-1544" y="40"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-224" y="-64">greaterThanBound &amp;&amp; localClock &gt; boundValue</label><nail x="-232" y="-40"/><nail x="-96" y="-40"/></transition><transition><source ref="id6"/><target ref="id7"/><label kind="guard" x="-544" y="-64">greaterThanBound &amp;&amp; localClock &lt;= boundValue</label><nail x="-232" y="-40"/><nail x="-504" y="-40"/></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="-488" y="-120">TdlTerminatorChannels[rightOpIndex]?</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-752" y="-120">TdlActivatorChannels[rightOpIndex]!</label></transition><transition><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="-1024" y="-120">TdlTerminatorChannels[leftOpIndex]?</label><label kind="assignment" x="-964" y="-96">localClock = 0</label></transition><transition><source ref="id10"/><target ref="id9"/><label kind="synchronisation" x="-1288" y="-120">TdlActivatorChannels[leftOpIndex]!</label></transition><transition><source ref="id11"/><target ref="id10"/><label kind="synchronisation" x="-1528" y="-120">TdlActivatorChannels[treeIndex]?</label></transition></template><template><name>TdlBoundedRepetitionRecognizer</name><parameter>const BoundType boundType, const BoundValue boundValue, const TdlTreeIndex treeIndex, const TdlTreeIndex operandIndex</parameter><declaration>const bool lessThanBound = (boundType == BOUND_LT);
const bool lessThanOrEqBound = (boundType == BOUND_LTE);
const bool greaterThanBound = (boundType == BOUND_GT);
const bool greaterThanOrEqBound = (boundType == BOUND_GTE);
const bool equalityBound = (boundType == BOUND_EQ);

int repetitions = 0;
</declaration><location id="id12" x="-1208" y="264"><committed/></location><location id="id13" x="-624" y="352"><name x="-616" y="360">CounterCheck</name><committed/></location><location id="id14" x="-904" y="352"><name x="-896" y="360">Listening</name></location><location id="id15" x="-1160" y="352"><name x="-1152" y="360">StartListening</name><committed/></location><location id="id16" x="-24" y="200"><name x="-8" y="192">End</name><committed/></location><location id="id17" x="-272" y="200"><committed/></location><location id="id18" x="-1160" y="136"><committed/></location><location id="id19" x="-1376" y="200"><committed/></location><location id="id20" x="-1600" y="200"><name x="-1640" y="184">Idle</name></location><init ref="id20"/><transition><source ref="id16"/><target ref="id20"/><nail x="-24" y="472"/><nail x="-1600" y="472"/></transition><transition><source ref="id13"/><target ref="id15"/><label kind="guard" x="-960" y="424">greaterThanOrEqBound &amp;&amp; repetitions &lt; boundValue</label><nail x="-624" y="448"/><nail x="-1160" y="448"/></transition><transition><source ref="id13"/><target ref="id15"/><label kind="guard" x="-936" y="400">greaterThanBound &amp;&amp; repetitions &lt;= boundValue</label><nail x="-624" y="424"/><nail x="-1160" y="424"/></transition><transition><source ref="id13"/><target ref="id15"/><label kind="guard" x="-904" y="376">equalityBound &amp;&amp; repetitions != boundValue</label><nail x="-624" y="400"/><nail x="-1160" y="400"/></transition><transition><source ref="id13"/><target ref="id17"/><label kind="guard" x="-616" y="312">greaterThanOrEqBound &amp;&amp; repetitions &gt;= boundValue</label><nail x="-624" y="336"/><nail x="-272" y="336"/></transition><transition><source ref="id13"/><target ref="id17"/><label kind="guard" x="-616" y="288">greaterThanBound &amp;&amp; repetitions &gt; boundValue</label><nail x="-624" y="312"/><nail x="-272" y="312"/></transition><transition><source ref="id12"/><target ref="id15"/><label kind="guard" x="-1200" y="296">boundValue &gt; 0</label><nail x="-1208" y="352"/></transition><transition><source ref="id12"/><target ref="id17"/><label kind="guard" x="-1192" y="240">boundValue == 0</label><label kind="comments">The condition is "== n" or "&amp;gt= n" where n == 0.

When we begin testing, the number of repetitions is already 0, so we can immediately successfully terminate.</label><nail x="-272" y="264"/></transition><transition><source ref="id19"/><target ref="id12"/><label kind="guard" x="-1360" y="208">equalityBound</label><nail x="-1376" y="232"/><nail x="-1208" y="232"/></transition><transition><source ref="id14"/><target ref="id13"/><label kind="synchronisation" x="-888" y="328">TdlTerminatorChannels[operandIndex]?</label><label kind="assignment" x="-816" y="352">repetitions++</label></transition><transition><source ref="id15"/><target ref="id14"/><label kind="synchronisation" x="-1144" y="328">TdlActivatorChannels[operandIndex]!</label></transition><transition><source ref="id13"/><target ref="id17"/><label kind="guard" x="-616" y="264">equalityBound &amp;&amp; repetitions == boundValue</label><nail x="-624" y="288"/><nail x="-272" y="288"/></transition><transition><source ref="id19"/><target ref="id12"/><label kind="guard" x="-1368" y="240">greaterThanOrEqBound</label><nail x="-1376" y="264"/></transition><transition><source ref="id19"/><target ref="id15"/><label kind="guard" x="-1368" y="328">greaterThanBound</label><nail x="-1376" y="352"/><nail x="-1208" y="352"/></transition><transition><source ref="id18"/><target ref="id17"/><label kind="guard" x="-1144" y="112">boundValue &gt; 0</label><label kind="comments">The condition is "&amp;lt; n" (n &amp;gt;= 1).
When we begin testing, the number of repetitions is 0 but 0 &amp;lt; n for n &amp;gt;= 1, so we can immediately successfully terminate.</label><nail x="-272" y="136"/></transition><transition><source ref="id17"/><target ref="id16"/><label kind="synchronisation" x="-256" y="176">TdlTerminatorChannels[treeIndex]!</label></transition><transition><source ref="id18"/><target ref="id20"/><label kind="guard" x="-1280" y="112">boundValue == 0</label><label kind="comments">The condition is "&amp;lt; n" (n &amp;lt; 1).
This is equivalent to "&amp;lt; 0" (n &amp;lt; 1 and n &amp;gt;= 0).
We cannot test whether a state occurs less than 0 times.</label><nail x="-1600" y="136"/></transition><transition><source ref="id19"/><target ref="id17"/><label kind="guard" x="-1360" y="176">lessThanOrEqBound</label><label kind="comments">The condition is "&amp;lt;= n" (n &amp;gt;= 0).
When we begin testing, the number of repetitions is already 0, but 0 &amp;lt;= n for n &amp;gt;= 0, so we can immediately successfully terminate.</label></transition><transition><source ref="id19"/><target ref="id18"/><label kind="guard" x="-1360" y="144">lessThanBound</label><nail x="-1376" y="168"/><nail x="-1160" y="168"/></transition><transition><source ref="id20"/><target ref="id19"/><label kind="synchronisation" x="-1592" y="176">TdlActivatorChannels[treeIndex]?</label><label kind="assignment" x="-1548" y="200">repetitions = 0</label></transition></template><template><name>TdlConjunctionRecognizer</name><parameter>const TdlTreeIndex treeIndex, const TdlTreeIndex leftOpIndex, const TdlTreeIndex rightOpIndex</parameter><location id="id21" x="-2248" y="-1000"></location><location id="id22" x="-2520" y="-1112"></location><location id="id23" x="-2248" y="-1112"><committed/></location><location id="id24" x="-2776" y="-1000"><committed/></location><location id="id25" x="-3024" y="-1000"><committed/></location><location id="id26" x="-1992" y="-1112"><name x="-2000" y="-1144">End</name><committed/></location><location id="id27" x="-2520" y="-1000"><name x="-2512" y="-992">Listening</name></location><location id="id28" x="-3272" y="-1000"><name x="-3280" y="-1032">Idle</name></location><init ref="id28"/><transition><source ref="id26"/><target ref="id28"/><nail x="-1992" y="-936"/><nail x="-3272" y="-936"/></transition><transition><source ref="id21"/><target ref="id23"/><label kind="synchronisation" x="-2240" y="-1064">TdlTerminatorChannels[leftOpIndex]?</label></transition><transition><source ref="id22"/><target ref="id23"/><label kind="synchronisation" x="-2512" y="-1144">TdlTerminatorChannels[rightOpIndex]?</label></transition><transition><source ref="id27"/><target ref="id22"/><label kind="synchronisation" x="-2760" y="-1064">TdlTerminatorChannels[leftOpIndex]?</label></transition><transition><source ref="id27"/><target ref="id21"/><label kind="synchronisation" x="-2504" y="-1024">TdlTerminatorChannels[rightOpIndex]?</label></transition><transition><source ref="id24"/><target ref="id27"/><label kind="synchronisation" x="-2768" y="-992">TdlActivatorChannels[rightOpIndex]!</label></transition><transition><source ref="id25"/><target ref="id24"/><label kind="synchronisation" x="-3008" y="-992">TdlActivatorChannels[leftOpIndex]!</label></transition><transition><source ref="id23"/><target ref="id26"/><label kind="synchronisation" x="-2232" y="-1104">TdlTerminatorChannels[treeIndex]!</label><label kind="assignment" x="-2232" y="-1136">TdlDiagnostics[treeIndex] = true</label></transition><transition><source ref="id28"/><target ref="id25"/><label kind="synchronisation" x="-3248" y="-1024">TdlActivatorChannels[treeIndex]?</label></transition></template><template><name>TdlDisjunctionRecognizer</name><parameter>const TdlTreeIndex treeIndex, const TdlTreeIndex leftOpIndex, const TdlTreeIndex rightOpIndex</parameter><location id="id29" x="-752" y="-600"><name x="-760" y="-632">End</name><committed/></location><location id="id30" x="-1000" y="-600"></location><location id="id31" x="-1296" y="-520"><name x="-1288" y="-512">Listening</name></location><location id="id32" x="-1552" y="-520"></location><location id="id33" x="-1792" y="-520"></location><location id="id34" x="-2032" y="-520"><name x="-2040" y="-552">Idle</name></location><init ref="id34"/><transition><source ref="id30"/><target ref="id29"/><label kind="synchronisation" x="-984" y="-592">TdlTerminatorChannels[treeIndex]!</label><label kind="assignment" x="-976" y="-624">TdlDiagnostics[treeIndex] = true</label></transition><transition><source ref="id31"/><target ref="id30"/><label kind="synchronisation" x="-1272" y="-624">TdlTerminatorChannels[leftOpIndex]?</label><nail x="-1296" y="-600"/></transition><transition><source ref="id31"/><target ref="id30"/><label kind="synchronisation" x="-1272" y="-544">TdlTerminatorChannels[rightOpIndex]?</label><nail x="-1000" y="-520"/></transition><transition><source ref="id32"/><target ref="id31"/><label kind="synchronisation" x="-1536" y="-512">TdlActivatorChannels[rightOpIndex]!</label></transition><transition><source ref="id33"/><target ref="id32"/><label kind="synchronisation" x="-1784" y="-512">TdlActivatorChannels[leftOpIndex]!</label></transition><transition><source ref="id34"/><target ref="id33"/><label kind="synchronisation" x="-2016" y="-544">TdlActivatorChannels[treeIndex]?</label></transition><transition><source ref="id29"/><target ref="id34"/><nail x="-752" y="-456"/><nail x="-2032" y="-456"/></transition></template><template><name>TdlLeadsToRecognizer</name><parameter>const TdlTreeIndex treeIndex, const TdlTreeIndex leftOpIndex, const TdlTreeIndex rightOpIndex</parameter><location id="id35" x="296" y="-416"><name x="288" y="-448">End</name><committed/></location><location id="id36" x="48" y="-416"><committed/></location><location id="id37" x="-216" y="-416"><name x="-264" y="-448">ListeningRightOp</name></location><location id="id38" x="-464" y="-416"><committed/></location><location id="id39" x="-720" y="-416"><name x="-768" y="-448">ListeningLeftOp</name></location><location id="id40" x="-952" y="-416"><committed/></location><location id="id41" x="-1200" y="-416"><name x="-1208" y="-448">Idle</name></location><init ref="id41"/><transition><source ref="id35"/><target ref="id41"/><nail x="296" y="-360"/><nail x="-1200" y="-360"/></transition><transition><source ref="id36"/><target ref="id35"/><label kind="synchronisation" x="64" y="-440">TdlTerminatorChannels[treeIndex]!</label><label kind="assignment" x="64" y="-416">TdlDiagnostics[treeIndex] = true</label></transition><transition><source ref="id37"/><target ref="id36"/><label kind="synchronisation" x="-208" y="-408">TdlTerminatorChannels[rightOpIndex]?</label></transition><transition><source ref="id38"/><target ref="id37"/><label kind="synchronisation" x="-456" y="-408">TdlActivatorChannels[rightOpIndex]!</label></transition><transition><source ref="id39"/><target ref="id38"/><label kind="synchronisation" x="-712" y="-408">TdlTerminatorChannels[leftOpIndex]?</label></transition><transition><source ref="id40"/><target ref="id39"/><label kind="synchronisation" x="-944" y="-408">TdlActivatorChannels[leftOpIndex]!</label></transition><transition><source ref="id41"/><target ref="id40"/><label kind="synchronisation" x="-1184" y="-440">TdlActivatorChannels[treeIndex]?</label></transition></template><template><name>TdlQuantificationRecognizer</name><parameter>const bool universal, const bool negated, const TdlTreeIndex treeIndex, const TrapsetIndex trapsetIndex, const int trapsetSize, bool &amp;trapset[0]</parameter><declaration>// Note: trapsetSize should equal length(trapset).
const bool negatedUniversalQuantification = universal &amp;&amp; negated;
const bool negatedExistentialQuantification = !universal &amp;&amp; negated;
const bool universalQuantification = universal &amp;&amp; !negated;
const bool existentialQuantification = !universal &amp;&amp; !negated;
typedef int[0, trapsetSize - 1] index;

void resetTrapset() {
    for (i : index) {
       trapset[i] = false;
    }
}
</declaration><location id="id42" x="-16" y="-8"><committed/></location><location id="id43" x="232" y="-8"><name x="216" y="-40">End</name><committed/></location><location id="id44" x="-552" y="-8"><name x="-536" y="-16">Listening</name></location><location id="id45" x="-792" y="-8"><name x="-800" y="-40">Idle</name></location><init ref="id45"/><transition><source ref="id44"/><target ref="id42"/><label kind="guard" x="-480" y="8">negatedExistentialQuantification &amp;&amp; forall(i : index) !trapset[i]</label><label kind="synchronisation" x="-424" y="32">TrapsetActivatorChannels[trapsetIndex]?</label><nail x="-552" y="32"/><nail x="-16" y="32"/></transition><transition><source ref="id44"/><target ref="id42"/><label kind="guard" x="-488" y="-96">negatedUniversalQuantification &amp;&amp; exists(i : index) !trapset[i]</label><label kind="synchronisation" x="-424" y="-72">TrapsetActivatorChannels[trapsetIndex]?</label><nail x="-552" y="-72"/><nail x="-16" y="-72"/></transition><transition><source ref="id44"/><target ref="id42"/><label kind="guard" x="-456" y="-144">universalQuantification &amp;&amp; forall(i : index) trapset[i]</label><label kind="synchronisation" x="-424" y="-120">TrapsetActivatorChannels[trapsetIndex]?</label><nail x="-552" y="-120"/><nail x="-16" y="-120"/><nail x="-16" y="-80"/></transition><transition><source ref="id42"/><target ref="id43"/><label kind="synchronisation" x="0" y="0">TdlTerminatorChannels[treeIndex]!</label><label kind="assignment" x="0" y="-32">TdlDiagnostics[treeIndex] = true</label></transition><transition><source ref="id43"/><target ref="id45"/><label kind="assignment" x="-336" y="136">resetTrapset()</label><nail x="232" y="160"/><nail x="-792" y="160"/></transition><transition><source ref="id44"/><target ref="id42"/><label kind="guard" x="-456" y="72">existentialQuantification &amp;&amp; exists(i : index) trapset[i]</label><label kind="synchronisation" x="-424" y="96">TrapsetActivatorChannels[trapsetIndex]?</label><nail x="-552" y="96"/><nail x="-16" y="96"/></transition><transition><source ref="id45"/><target ref="id44"/><label kind="synchronisation" x="-776" y="0">TdlActivatorChannels[treeIndex]?</label></transition></template><template><name>TdlTerminatorChannelAdapter</name><parameter> const TdlTreeIndex treeIndex</parameter><location id="id46" x="-264" y="-208"><name x="-296" y="-240">Duplicating</name><committed/></location><location id="id47" x="-16" y="-208"><name x="-24" y="-240">End</name><committed/></location><location id="id48" x="-552" y="-208"><name x="-576" y="-240">Listening</name></location><location id="id49" x="-808" y="-208"><name x="-816" y="-240">Idle</name></location><init ref="id49"/><transition><source ref="id46"/><target ref="id47"/><label kind="synchronisation" x="-248" y="-208">TdlTerminatorChannels[treeIndex]!</label></transition><transition><source ref="id47"/><target ref="id49"/><nail x="-16" y="-120"/><nail x="-808" y="-120"/></transition><transition><source ref="id48"/><target ref="id46"/><label kind="synchronisation" x="-520" y="-208">TdlTerminatorChannels[treeIndex]?</label><label kind="assignment" x="-512" y="-232">TdlDiagnostics[treeIndex] = true</label></transition><transition><source ref="id49"/><target ref="id48"/><label kind="synchronisation" x="-792" y="-208">TdlActivatorChannels[treeIndex]?</label></transition></template><system>TdlSW = TdlStopwatch(0);
// Tool needs to add Template instantiations here.
system TdlSW; // Tool needs to specify processes.</system></nta>